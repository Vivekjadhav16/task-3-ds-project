# Import necessary libraries
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Load your sales dataset (replace 'sales_data.csv' with your dataset file)
data = pd.read_csv('sales_data.csv')

# Data Preprocessing
# Select relevant features (e.g., advertising expenditure) and the target variable (sales)
features = ['Advertising_Expenditure']  # Add more features if needed
target = 'Sales'
X = data[features]
y = data[target]

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Model Building (Linear Regression)
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print(f"Mean Squared Error: {mse}")
print(f"R-squared (R2) Score: {r2}")

# Now you can use the trained model for sales predictions

# Example prediction
new_advertising_expenditure = np.array([[1000]])  # Replace with your own advertising expenditure
predicted_sales = model.predict(new_advertising_expenditure)
print(f"Predicted Sales: {predicted_sales[0]}")
